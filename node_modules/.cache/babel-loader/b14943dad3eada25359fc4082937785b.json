{"ast":null,"code":"var _jsxFileName = \"/home/advel/workplace/dApps/d-app-to-do-list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport React from 'react';\nimport { ethers } from 'ethers';\nimport { loadTasks, addTask } from './_logics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [wallet, setWallet] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const newTaskTitle = useRef(0);\n  const contractAdress = '0xAdA49b192Ed3dB8dC62B9a990A6613dC3a294a6b';\n  const contractAbi = [{\n    \"inputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"title\",\n      \"type\": \"string\"\n    }],\n    \"name\": \"addTask\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": false,\n      \"internalType\": \"string\",\n      \"name\": \"\",\n      \"type\": \"string\"\n    }],\n    \"name\": \"CompletedTask\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": false,\n      \"internalType\": \"string\",\n      \"name\": \"\",\n      \"type\": \"string\"\n    }],\n    \"name\": \"RemovedTask\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": false,\n      \"internalType\": \"string\",\n      \"name\": \"\",\n      \"type\": \"string\"\n    }],\n    \"name\": \"newTask\",\n    \"type\": \"event\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"int256\",\n      \"name\": \"id\",\n      \"type\": \"int256\"\n    }, {\n      \"internalType\": \"int256\",\n      \"name\": \"rType\",\n      \"type\": \"int256\"\n    }],\n    \"name\": \"removeTask\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"getTasks\",\n    \"outputs\": [{\n      \"components\": [{\n        \"internalType\": \"string\",\n        \"name\": \"title\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"int256\",\n        \"name\": \"id\",\n        \"type\": \"int256\"\n      }],\n      \"internalType\": \"struct ToDoList.Task[]\",\n      \"name\": \"\",\n      \"type\": \"tuple[]\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }];\n  useEffect(() => {\n    setProvider(new ethers.providers.Web3Provider(window.ethereum));\n    provider.on('newTask', async title => {\n      const loadedTasks = await loadTasks(newContract);\n      console.log(\"?\");\n      setTasks(loadedTasks);\n    });\n  }, []);\n\n  const connectWallet = async () => {\n    const tempAccounts = await provider.send('eth_requestAccounts', []);\n    const newContract = new ethers.Contract(contractAdress, contractAbi, provider);\n    console.log(provider.listeners(\"newTask\")); // setProvider(provider);\n    // console.log(newProvider);\n\n    setContract(newContract);\n    setAccounts(tempAccounts);\n    const loadedTasks = await loadTasks(newContract);\n    setTasks(loadedTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DApp todo List | \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"current account : \", accounts[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async () => await connectWallet(),\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: newTaskTitle,\n        placeholder: \"enter task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const signer = provider.getSigner(); // console.log(signer)\n\n          console.log(provider);\n          addTask(new ethers.Contract(contractAdress, contractAbi, signer), newTaskTitle.current.value);\n          newTaskTitle.current.value = '';\n        },\n        children: \"add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"tasks: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: task[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6yJDyLeXIrBawG9kJ/SgWw0YMT8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","useRef","React","ethers","loadTasks","addTask","App","tasks","setTasks","accounts","setAccounts","wallet","setWallet","contract","setContract","provider","setProvider","newTaskTitle","contractAdress","contractAbi","providers","Web3Provider","window","ethereum","on","title","loadedTasks","newContract","console","log","connectWallet","tempAccounts","send","Contract","listeners","signer","getSigner","current","value","map","task"],"sources":["/home/advel/workplace/dApps/d-app-to-do-list/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport React from 'react';\nimport { ethers } from 'ethers';\nimport { loadTasks, addTask } from './_logics';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [wallet, setWallet] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n\n  const newTaskTitle = useRef(0);\n  \n\n  const contractAdress = '0xAdA49b192Ed3dB8dC62B9a990A6613dC3a294a6b';\n  const contractAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"title\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"addTask\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"CompletedTask\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"RemovedTask\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"newTask\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"id\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"rType\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"removeTask\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getTasks\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"string\",\n              \"name\": \"title\",\n              \"type\": \"string\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"id\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct ToDoList.Task[]\",\n          \"name\": \"\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n  ]\n\n\n  useEffect(()=>{\n    setProvider(new ethers.providers.Web3Provider(window.ethereum));\n    provider.on('newTask', async (title)=>{\n      const loadedTasks = await loadTasks(newContract);\n      console.log(\"?\");\n      setTasks( loadedTasks );\n    })\n  }, [])\n  \n\n  const connectWallet = async()=>{\n    \n    const tempAccounts = await provider.send('eth_requestAccounts', []);\n    \n    const newContract = new ethers.Contract(contractAdress, contractAbi, provider);\n    \n\n    console.log(provider.listeners(\"newTask\"))\n\n    // setProvider(provider);\n    // console.log(newProvider);\n    setContract(newContract);\n    setAccounts(tempAccounts);\n\n    const loadedTasks = await loadTasks(newContract);\n    setTasks( loadedTasks );\n\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>DApp todo List | </h1> \n      <h4>current account : {accounts[0]}</h4>\n      <button onClick={async() => await connectWallet()}>Connect</button>\n      <div>\n        <input ref={newTaskTitle} placeholder='enter task'/> \n        <button onClick={()=>{\n          const signer = provider.getSigner();\n          // console.log(signer)\n          console.log(provider)\n\n          addTask( new ethers.Contract(contractAdress, contractAbi, signer), newTaskTitle.current.value);\n          newTaskTitle.current.value = '';\n        }}>add task</button>\n      </div>\n      <div>\n        <h3>tasks: </h3>\n        {\n          tasks.map(task => <h4>{task[0]}</h4>)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}