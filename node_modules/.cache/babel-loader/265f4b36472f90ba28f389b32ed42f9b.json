{"ast":null,"code":"var _jsxFileName = \"/home/advel/workplace/dApps/d-app-to-do-list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport React from 'react';\nimport { ethers } from 'ethers';\nimport { loadTasks, addTask } from './_logics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [wallet, setWallet] = useState(null);\n  const newTaskTitle = useRef(0);\n  let provider;\n  let contract;\n  const contractAdress = '0xEe6d504b7ca4FBd10d2d953Ed441A287e25Be57F';\n  const contractAbi = ['function addTask(string memory title) public', 'function removeTask(int id, int rType) public', 'function getTasks() public view returns (tuple(string, int)[] memory)'];\n  useEffect(() => {\n    console.log(window.ethereum);\n  }, []);\n\n  const connectWallet = async () => {\n    provider = new ethers.providers.Web3Provider(window.ethereum);\n    const tempAccounts = await provider.send('eth_requestAccounts', []);\n    contract = new ethers.Contract(contractAdress, contractAbi, provider);\n    setAccounts(tempAccounts);\n    const loadedTasks = await loadTasks(contract);\n    setTasks(loadedTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DApp todo List | \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"current account : \", accounts[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async () => await connectWallet(),\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: newTaskTitle,\n        placeholder: \"enter task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log(contract); // addTask(contract, newTaskTitle.current.value);\n\n          newTaskTitle.current.value = '';\n        },\n        children: \"add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"tasks: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: task[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cbWwqESgdo0DDdb0wM1X8DA6bn8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","useRef","React","ethers","loadTasks","addTask","App","tasks","setTasks","accounts","setAccounts","wallet","setWallet","newTaskTitle","provider","contract","contractAdress","contractAbi","console","log","window","ethereum","connectWallet","providers","Web3Provider","tempAccounts","send","Contract","loadedTasks","current","value","map","task"],"sources":["/home/advel/workplace/dApps/d-app-to-do-list/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport React from 'react';\nimport { ethers } from 'ethers';\nimport { loadTasks, addTask } from './_logics';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [wallet, setWallet] = useState(null);\n\n  const newTaskTitle = useRef(0);\n  \n  let provider;\n  let contract;\n\n  const contractAdress = '0xEe6d504b7ca4FBd10d2d953Ed441A287e25Be57F';\n  const contractAbi = [\n      'function addTask(string memory title) public',\n      'function removeTask(int id, int rType) public',\n      'function getTasks() public view returns (tuple(string, int)[] memory)'\n  ]\n\n\n  useEffect(()=>{\n    console.log(window.ethereum);\n  }, [])\n  \n\n  const connectWallet = async()=>{\n    provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    const tempAccounts = await provider.send('eth_requestAccounts', []);\n    \n    \n    contract = new ethers.Contract(contractAdress, contractAbi, provider);\n    setAccounts(tempAccounts);\n\n    const loadedTasks = await loadTasks(contract);\n    setTasks( loadedTasks );\n\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>DApp todo List | </h1> \n      <h4>current account : {accounts[0]}</h4>\n      <button onClick={async() => await connectWallet()}>Connect</button>\n      <div>\n        <input ref={newTaskTitle} placeholder='enter task'/> \n        <button onClick={()=>{\n          console.log(contract)\n          // addTask(contract, newTaskTitle.current.value);\n          newTaskTitle.current.value = '';\n        }}>add task</button>\n      </div>\n      <div>\n        <h3>tasks: </h3>\n        {\n          tasks.map(task => <h4>{task[0]}</h4>)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,WAAnC;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;EAEA,MAAMc,YAAY,GAAGZ,MAAM,CAAC,CAAD,CAA3B;EAEA,IAAIa,QAAJ;EACA,IAAIC,QAAJ;EAEA,MAAMC,cAAc,GAAG,4CAAvB;EACA,MAAMC,WAAW,GAAG,CAChB,8CADgB,EAEhB,+CAFgB,EAGhB,uEAHgB,CAApB;EAOAjB,SAAS,CAAC,MAAI;IACZkB,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,QAAnB;EACD,CAFQ,EAEN,EAFM,CAAT;;EAKA,MAAMC,aAAa,GAAG,YAAS;IAC7BR,QAAQ,GAAG,IAAIX,MAAM,CAACoB,SAAP,CAAiBC,YAArB,CAAkCJ,MAAM,CAACC,QAAzC,CAAX;IAEA,MAAMI,YAAY,GAAG,MAAMX,QAAQ,CAACY,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAA3B;IAGAX,QAAQ,GAAG,IAAIZ,MAAM,CAACwB,QAAX,CAAoBX,cAApB,EAAoCC,WAApC,EAAiDH,QAAjD,CAAX;IACAJ,WAAW,CAACe,YAAD,CAAX;IAEA,MAAMG,WAAW,GAAG,MAAMxB,SAAS,CAACW,QAAD,CAAnC;IACAP,QAAQ,CAAEoB,WAAF,CAAR;EAED,CAZD;;EAeA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,iCAAuBnB,QAAQ,CAAC,CAAD,CAA/B;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAE,YAAW,MAAMa,aAAa,EAA/C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,wBACE;QAAO,GAAG,EAAET,YAAZ;QAA0B,WAAW,EAAC;MAAtC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAE,MAAI;UACnBK,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EADmB,CAEnB;;UACAF,YAAY,CAACgB,OAAb,CAAqBC,KAArB,GAA6B,EAA7B;QACD,CAJD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAYE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAGIvB,KAAK,CAACwB,GAAN,CAAUC,IAAI,iBAAI;QAAA,UAAKA,IAAI,CAAC,CAAD;MAAT;QAAA;QAAA;QAAA;MAAA,QAAlB,CAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD;;GA3DQ1B,G;;KAAAA,G;AA6DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}